const { SlashCommandBuilder, EmbedBuilder, PermissionFlagsBits } = require("discord.js");

// Ici on garde les syst√®mes activ√©s pour chaque serveur
let serverConfig = {};

module.exports = {
  data: new SlashCommandBuilder()
    .setName("config")
    .setDescription("Configurer les syst√®mes du bot pour ce serveur")
    .setDefaultMemberPermissions(PermissionFlagsBits.Administrator)
    .addStringOption(option =>
      option.setName("systeme")
        .setDescription("Choisir un syst√®me √† activer ou d√©sactiver")
        .setRequired(true)
        .addChoices(
          { name: "üéÆ Jeux", value: "games" },
          { name: "üî® Mod√©ration", value: "moderation" },
          { name: "üìä Statistiques", value: "stats" },
          { name: "üòÇ Fun", value: "fun" }
        )
    )
    .addStringOption(option =>
      option.setName("action")
        .setDescription("Activer ou d√©sactiver le syst√®me")
        .setRequired(true)
        .addChoices(
          { name: "Activer ‚úÖ", value: "enable" },
          { name: "D√©sactiver ‚ùå", value: "disable" }
        )
    ),

  async execute(interaction) {
    const systeme = interaction.options.getString("systeme");
    const action = interaction.options.getString("action");
    const guildId = interaction.guild.id;

    if (!serverConfig[guildId]) {
      serverConfig[guildId] = { games: false, moderation: false, stats: false, fun: false };
    }

    serverConfig[guildId][systeme] = action === "enable";

    const embed = new EmbedBuilder()
      .setTitle("‚öôÔ∏è Configuration mise √† jour")
      .setDescription(`Le syst√®me **${systeme}** a √©t√© **${action === "enable" ? "activ√© ‚úÖ" : "d√©sactiv√© ‚ùå"}**.`)
      .setColor(action === "enable" ? 0x57F287 : 0xED4245)
      .setFooter({ text: `Serveur: ${interaction.guild.name}` });

    await interaction.reply({ embeds: [embed], ephemeral: true });
  }
};
